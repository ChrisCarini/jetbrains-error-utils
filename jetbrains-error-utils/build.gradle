/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

String properties(String key) { return project.findProperty(key).toString() }

plugins {
    id 'idea'
    id 'java-library'

    // To publish to maven, including maven local: https://www.jetbrains.com/help/idea/add-a-gradle-library-to-the-maven-repository.html#publish
    id 'maven-publish'

    id 'org.jetbrains.changelog' version '1.3.1'

    // Add IJ gradle plugin in order to allow us to pull a dependency on IntelliJ platform.
    id "org.jetbrains.intellij" version "1.9.0"
}

group properties("libraryGroup")
version properties("libraryVersion")

/**
 * #####################################################################################################################
 * #####################################################################################################################
 *
 * BELOW SECTION TAKEN FROM https://github.com/intellij-dlanguage/intellij-dlanguage (`:utils`, `:errorreporting`, and `:debugger` modules).
 *
 * Ultimately, this just disables all the gradle tasks provided by the 'org.jetbrains.intellij' gradle plugin, as we only
 * want this plugin for the dependencies.
 */

// Disable all Gradle Tasks for the gradle-intellij-plugin as we only use the plugin for the dependencies
project.gradle.taskGraph.whenReady { graph ->
    graph.allTasks.findAll { it.group == 'intellij' }.each {
        logger.info('Disabling \'org.jetbrains.intellij\' task: ' + it.name)
        it.enabled = false
    }
}

intellij {
    version.set(properties("platformVersion"))
    downloadSources.set(properties("platformDownloadSources").toBoolean())
}
/**
 * END ABOVE SECTION TAKEN FROM https://github.com/intellij-dlanguage/intellij-dlanguage (`:utils`, `:errorreporting`, and `:debugger` modules).
 *
 * #####################################################################################################################
 * #####################################################################################################################
 */


changelog {
    version = properties("libraryVersion")
    header = "[${-> version.get()}] - ${new Date().format('yyyy-MM-dd')}"
}

idea {
    module {
        jdkName = '11'
    }
}

repositories {
    mavenCentral()

//    maven {
//        url 'https://www.jetbrains.com/intellij-repository/releases/'
//    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = group
            artifactId = rootProject.name
            version = version

            from components.java
        }
    }
}

tasks {
    sourceCompatibility = properties("javaVersion")
    targetCompatibility = properties("javaVersion")

    // Set the respective compiler arguments to fail the build if there are warnings.
    tasks.withType(JavaCompile) {
        options.compilerArgs.addAll([
                '-Xlint:all',
                '-Xlint:-options',
                '-Xlint:-rawtypes',
                '-Xlint:-processing',
                '-Xlint:-path', // Ignore JBR SDK manifest element warnings
                '-proc:none',
                '-Werror',
                '-Xlint:-classfile'
        ]) //ignore warnings from dependencies
    }
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

java {
    withSourcesJar()
}

test {
    useTestNG()
    useJUnit()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'

//    implementation 'com.jetbrains.intellij.idea:ideaIU:2022.2.1'
}