# TAKEN FROM: https://docs.github.com/en/actions/publishing-packages/publishing-java-packages-with-gradle#publishing-packages-to-the-maven-central-repository
# TWEAKED TO ALIGN WITH IJ PLUGIN `publish.yml` FILES FOR CONSISTENCY

name: Publish package to the Maven Central Repository
on:
  release:
    types: [ prereleased, released ]

jobs:
  publish:
    name: Publish Library
    runs-on: ubuntu-latest
    steps:
      
      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        timeout-minutes: 1
        with:
          ref: ${{ github.event.release.tag_name }}

      # Setup Java 17 environment for the next steps
      - name: Setup Java 17
        uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73 # v4.4.0
        timeout-minutes: 5
        with:
          distribution: zulu
          java-version: 17
          cache: gradle

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          CHANGELOG="$(cat << 'EOM' | sed -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ github.event.release.body }}
          EOM
          )"
          
          echo "changelog<<EOF" | tee -a $GITHUB_OUTPUT
          echo "$CHANGELOG" | tee -a $GITHUB_OUTPUT
          echo "EOF" | tee -a $GITHUB_OUTPUT

      # Update Unreleased section with the current release note
      - name: Patch Changelog
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          ./gradlew patchChangelog --release-note="$CHANGELOG"
        
      # Publish the lib to OSSRH (Sonatype) & GitHub Packages
      - name: Publish Package
        run: ./gradlew publish
        env:
          OSSRH_MAVEN_USERNAME: ${{ secrets.OSSRH_MAVEN_USERNAME }}
          OSSRH_MAVEN_PASSWORD: ${{ secrets.OSSRH_MAVEN_PASSWORD }}
          PGP_KEY: ${{ secrets.PGP_KEY }}
          PGP_PWD: ${{ secrets.PGP_PWD }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload artifact as a release asset
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ github.event.release.tag_name }} ./build/libs/*

      # Create pull request
      - name: Create Pull Request
        if: ${{ steps.properties.outputs.changelog != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT_REPO_SCOPE_FOR_ACTIONS_THAT_OPEN_PRS }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          BRANCH="changelog-update-$VERSION"

          git config user.email "action@github.com"
          git config user.name "GitHub Action"

          git checkout -b $BRANCH
          git commit -am "Changelog update - $VERSION"
          git push --set-upstream origin $BRANCH
          
          # Moving sed prog into variables; see https://stackoverflow.com/a/25021905
          SED_PROG1='s/^[[:space:]]*$//g'
          SED_PROG2='/./,$!d'
          # Unquoted heredoc to allow for variable expansion for $VERSION; see https://stackoverflow.com/a/4938198
          PR_BODY="$(cat <<-EOM | sed -e $SED_PROG1 -e $SED_PROG2
          Current pull request contains patched \`CHANGELOG.md\` file for the \`$VERSION\` version.
          EOM
          )"
          
          gh pr create \
            --title "Changelog update - \`$VERSION\`" \
            --body "$PR_BODY" \
            --reviewer ChrisCarini \
            --base main \
            --label "merge when passing" \
            --head $BRANCH